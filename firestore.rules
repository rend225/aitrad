rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin(uid) {
      return uid != null && 
             exists(/databases/$(database)/documents/users/$(uid)) &&
             get(/databases/$(database)/documents/users/$(uid)).data.isAdmin == true;
    }
    
    // Users can read/write their own data
    // Admins can read all user data
    match /users {
      allow read: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // Users can read/write their own recommendations
    // Admins can read all recommendations
    match /recommendations/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && isAdmin(request.auth.uid);
      
      match /{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
        allow read: if request.auth != null && isAdmin(request.auth.uid);
      }
    }
    
    // Plans are publicly readable, admin writable
    match /plans/{document} {
      allow read: if true; // Public read access for pricing page
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    match /schools/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // Featured signals - public read, admin write
    match /featured_signals/{document} {
      allow read: if true; // Public read for homepage
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // Settings - public read for SEO, admin write
    match /settings/{document} {
      allow read: if true; // Public read for SEO settings
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // Admin-only access
    match /admin/{document=**} {
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // Chat system rules
    match /chats/{chatId} {
      // Users can create new chats where they are the owner
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Users can read/update/delete their own chats - made more robust
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.userId && resource.data.userId is string;
      // Admins can read/write all chats
      allow read, write: if request.auth != null && isAdmin(request.auth.uid);
      
      // Chat messages
      match /messages/{messageId} {
        // Users can create/read/write messages in their own chats
        allow create: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.userId == request.auth.uid;
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/chats/$(chatId)).data.userId == request.auth.uid;
        // Admins can read/write all messages
        allow read, write: if request.auth != null && isAdmin(request.auth.uid);
      }
    }
  }
}